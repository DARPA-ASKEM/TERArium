# Automatically build Docker images on changes to main and push them to the GitHub Container Registry

name: Docker CI

on:
  push:
    branches: [main]
    tags:
      - 'v*'
  pull_request:
    branches: ['main']

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # Image owner
  OWNER: ${{ github.repository_owner }}

jobs:
  build-push:
    name: Buid and push Docker image to GitHub Container registry
    runs-on: ubuntu-22.04
    permissions:
      packages: write
      contents: read

    strategy:
      matrix:
        include:
          - context: 'keycloak-theme'
            image_name: 'terarium-theme'
          # add others here as needed

    steps:
      # Checkout the repository
      - name: Checkout the repository
        uses: actions/checkout@v3

      # Login against the docker registry
      - name: Login to registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Lowercase the owner for docker image naming conventions
      - name: set lower case owner name
        run: |
          echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}

      # Retrieve meta information for the docker file
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.OWNER_LC }}/${{ matrix.image_name }}
          flavor: latest=true
          tags: |
            # set latest tag for default branch
            type=raw,value=main,enable={{is_default_branch}}
            type=semver,pattern={{version}}
            type=raw,value=foo,enable=true

      # Build and push Docker Theme image
      - name: Build and Push Terarium Keycloak Theme Docker Image
        uses: docker/build-push-action@v3
        with:
          context: ./${{ matrix.context }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
